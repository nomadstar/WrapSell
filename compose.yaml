services:
  # ganache:
  #   build:
  #     context: .
  #     dockerfile: dockerfile
  #   ports:
  #     - "8545:8545"
  #   volumes:
  #     - ./ganache:/data
  #   working_dir: /data
  #   environment:
  #     - NETWORK_ID=5777
  #     - DEFAULT_BALANCE_ETHER=1000000000000000000000
  #     - BLOCK_TIME=1
  #     - GAS_LIMIT=8000000
  #     - FORK_URL=http://localhost:8545
  #     - FORK_BLOCK_NUMBER=0

  getter:
    image: python:latest
    container_name: getter_service
    working_dir: /app
    stdin_open: true
    tty: true
    ports:
      - "5000:5000"
    volumes:
      - ./wrap-backend:/app
    # âœ… Cargar archivo .env
    env_file:
      - ./wrap-backend/.env
    command: /bin/bash -c "pip install -r requirements.txt && python3 app.py"
    networks:
      - wrapsell-network
    depends_on:
      - db

  db:
    image: postgres:latest
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    networks:
      - wrapsell-network

  nextjs:
    image: node:latest
    container_name: nextjs_app
    working_dir: /app
    stdin_open: true
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./wrap-frontend:/app
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_API_URL=http://getter:5000
      - NEXT_PUBLIC_API_KEY=your_secret_key
    networks:
      - wrapsell-network
    depends_on:
      - getter

networks:
  wrapsell-network:
    driver: bridge

volumes:
  postgres_data:
